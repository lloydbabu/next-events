{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Code\\\\Next\\\\NextEvents\\\\pages\\\\events\\\\[...slug].js\";\nimport { useRouter } from \"next/router\";\nimport { Fragment } from \"react\";\nimport EventList from \"../../components/events/events-list\";\nimport ResultsTitle from \"../../components/events/results-title\";\nimport Button from \"../../components/ui/button\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\nexport var __N_SSP = true;\nexport default function FilteredEventsPage(props) {\n  // const router = useRouter();\n  // const filterData = router.query.slug;\n  // if (!filterData) {\n  //   return <p className=\"center\">Loading...</p>;\n  // }\n  // const filteredYear = filterData[0];\n  // const filteredDate = filterData[1];\n  // const numYear = +filteredYear;\n  // const numMonth = +filteredDate;\n  if (props.hasError) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Invalid filter data! Please adjust your filters!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show all events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  var filteredEvents = props.events;\n\n  if (!filteredEvents || filteredEvents.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ErrorAlert, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No events found for the chosen filter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          link: \"/events\",\n          children: \"Show all events\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n\n  var date = new Date(props.date.numYear, props.date.numMonth - 1);\n  console.log(date);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ResultsTitle, {\n      date: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventList, {\n      items: filteredEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = FilteredEventsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEventsPage\");","map":{"version":3,"sources":["D:/Code/Next/NextEvents/pages/events/[...slug].js"],"names":["useRouter","Fragment","EventList","ResultsTitle","Button","ErrorAlert","FilteredEventsPage","props","hasError","filteredEvents","events","length","date","Date","numYear","numMonth","console","log"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,SAAP,MAAsB,qCAAtB;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;AAEA,eAAe,SAASC,kBAAT,CAA4BC,KAA5B,EAAmC;AAChD;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,MACEA,KAAK,CAACC,QADR,EAEE;AACA,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,MAAMC,cAAc,GAAGF,KAAK,CAACG,MAA7B;;AAEA,MAAI,CAACD,cAAD,IAAmBA,cAAc,CAACE,MAAf,KAA0B,CAAjD,EAAoD;AAClD,wBACE,QAAC,QAAD;AAAA,8BACE,QAAC,UAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAED,MAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASN,KAAK,CAACK,IAAN,CAAWE,OAApB,EAA6BP,KAAK,CAACK,IAAN,CAAWG,QAAX,GAAsB,CAAnD,CAAb;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,IAAI,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KApDuBH,kB","sourcesContent":["import { useRouter } from \"next/router\";\r\nimport { Fragment } from \"react\";\r\nimport EventList from \"../../components/events/events-list\";\r\nimport { getFilteredEvents } from \"../../helpers/api-utils\";\r\nimport ResultsTitle from \"../../components/events/results-title\";\r\nimport Button from \"../../components/ui/button\";\r\nimport ErrorAlert from \"../../components/ui/error-alert\";\r\n\r\nexport default function FilteredEventsPage(props) {\r\n  // const router = useRouter();\r\n  // const filterData = router.query.slug;\r\n\r\n  // if (!filterData) {\r\n  //   return <p className=\"center\">Loading...</p>;\r\n  // }\r\n\r\n  // const filteredYear = filterData[0];\r\n  // const filteredDate = filterData[1];\r\n  // const numYear = +filteredYear;\r\n  // const numMonth = +filteredDate;\r\n\r\n  if (\r\n    props.hasError\r\n  ) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>Invalid filter data! Please adjust your filters!</p>\r\n        </ErrorAlert>\r\n        <div className=\"center\">\r\n          <Button link=\"/events\">Show all events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const filteredEvents = props.events;\r\n\r\n  if (!filteredEvents || filteredEvents.length === 0) {\r\n    return (\r\n      <Fragment>\r\n        <ErrorAlert>\r\n          <p>No events found for the chosen filter!</p>\r\n        </ErrorAlert>\r\n        <div className=\"center\">\r\n          <Button link=\"/events\">Show all events</Button>\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  const date = new Date(props.date.numYear, props.date.numMonth - 1);\r\n  console.log(date);\r\n\r\n  return (\r\n    <Fragment>\r\n      <ResultsTitle date={date} />\r\n      <EventList items={filteredEvents} />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getServerSideProps(context) {\r\nconst { params } = context;\r\n\r\nconst filterData = params.slug;\r\n\r\nconst filteredYear = filterData[0];\r\n  const filteredDate = filterData[1];\r\n  const numYear = +filteredYear;\r\n  const numMonth = +filteredDate;\r\n\r\n  if (\r\n    isNaN(numYear) ||\r\n    isNaN(numMonth) ||\r\n    numYear > 2030 ||\r\n    numYear < 2021 ||\r\n    numMonth > 12 ||\r\n    numMonth < 1\r\n  ) {\r\n    return {\r\n      props: { hasError: true}\r\n      \r\n      }\r\n      // notFound: true\r\n    };\r\n  \r\n\r\n  const filteredEvents = await getFilteredEvents({\r\n    year: numYear,\r\n    month: numMonth,\r\n  });\r\n\r\n  console.log(filtere)\r\n\r\n  return {\r\n    props: {\r\n      events: filteredEvents,\r\n      date: {\r\n        year: numYear,\r\n        month: numMonth\r\n      }\r\n    }\r\n  };\r\n\r\n \r\n}\r\n"]},"metadata":{},"sourceType":"module"}