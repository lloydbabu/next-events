{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Code\\\\Next\\\\NextEvents\\\\pages\\\\events\\\\[eventid].js\";\nimport { Fragment } from \"react\";\nimport EventSummary from \"../../components/event-detail/event-summary\";\nimport EventLogistics from \"../../components/event-detail/event-logistics\";\nimport EventContent from \"../../components/event-detail/event-content\";\nimport ErrorAlert from '../../components/ui/error-alert';\nexport var __N_SSG = true;\nexport default function EvenDetailPage(props) {\n  var event = props.selectedEvent;\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"center\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = EvenDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EvenDetailPage\");","map":{"version":3,"sources":["D:/Code/Next/NextEvents/pages/events/[eventid].js"],"names":["Fragment","EventSummary","EventLogistics","EventContent","ErrorAlert","EvenDetailPage","props","event","selectedEvent","title","date","location","image","description"],"mappings":";;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,YAAP,MAAyB,6CAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;;AAEA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC5C,MAAMC,KAAK,GAAGD,KAAK,CAACE,aAApB;;AAEA,MAAI,CAACD,KAAL,EAAY;AACV,wBACA;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADA;AAKD;;AAED,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACE;AAA3B;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,IAAI,EAAEF,KAAK,CAACG,IADd;AAEE,MAAA,OAAO,EAAEH,KAAK,CAACI,QAFjB;AAGE,MAAA,KAAK,EAAEJ,KAAK,CAACK,KAHf;AAIE,MAAA,QAAQ,EAAEL,KAAK,CAACE;AAJlB;AAAA;AAAA;AAAA;AAAA,YAFF,eAQE,QAAC,YAAD;AAAA,6BACE;AAAA,kBAAIF,KAAK,CAACM;AAAV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;KAzBuBR,c","sourcesContent":["import { getEventById, getFeaturedEvents } from \"../../helpers/api-utils\";\r\nimport { Fragment } from \"react\";\r\nimport EventSummary from \"../../components/event-detail/event-summary\";\r\nimport EventLogistics from \"../../components/event-detail/event-logistics\";\r\nimport EventContent from \"../../components/event-detail/event-content\";\r\nimport ErrorAlert from '../../components/ui/error-alert';\r\n\r\nexport default function EvenDetailPage(props) {\r\n  const event = props.selectedEvent;\r\n\r\n  if (!event) {\r\n    return (\r\n    <div className=\"center\">\r\n    <p>Loading...</p>\r\n    </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <EventSummary title={event.title}></EventSummary>\r\n      <EventLogistics\r\n        date={event.date}\r\n        address={event.location}\r\n        image={event.image}\r\n        imageAlt={event.title}\r\n      ></EventLogistics>\r\n      <EventContent>\r\n        <p>{event.description}</p>\r\n      </EventContent>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport async function getStaticPaths(){\r\n  const events = await getFeaturedEvents();\r\n\r\n  const paths = events.map((event)=>({params: {eventid: event?.id}}));\r\n  return {\r\n    paths,\r\n    fallback: true\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context){\r\nconst eventId = context.params.eventid;\r\nconst event = await getEventById(eventId);\r\nreturn {\r\n  props:{\r\n    selectedEvent: event\r\n  },\r\n  revalidate: 30\r\n};\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}